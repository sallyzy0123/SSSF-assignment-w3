# TODO: create graphql schema for cat. Example type definitions: 
# Cat: id, cat_name, weight, birthdate, owner, location, filename ✅
# Location: type, coordinates ✅
# Coordinates: lat, lng ✅
# LocationInput: type, coordinates ✅
# Query: catById, cats, catsByArea, catsByOwner ✅
# Mutation: createCat, updateCat, deleteCat ✅
scalar DateTime

type Cat {
    id: ID
    cat_name: String
    weight: Float
    birthdate: DateTime
    owner: User
    location: Location
    filename: String
}

type Location {
    type: GeoJSONPointType
    coordinates: [Float]
}

enum GeoJSONPointType {
    Point
}

type Query {
    cats: [Cat]
    catById(id: ID!): Cat
    catsByArea(topRight: Coordinates!, bottomLeft: Coordinates!): [Cat]
    catsByOwner(ownerId: ID!): [Cat]
}

input Coordinates {
  lat: Float
  lng: Float
}

input LocationInput {
    type: GeoJSONPointType!
    # Coordinates must be in format [lng, lat]
    coordinates: [Float]!
}

type Mutation {
    createCat(cat_name: String!, weight: Float!, birthdate: DateTime!, owner: ID!, location: LocationInput!, filename: String!): Cat
    updateCat(id: ID!, cat_name: String, weight: Float, birthdate: DateTime): Cat
    deleteCat(id: ID!): Cat
}